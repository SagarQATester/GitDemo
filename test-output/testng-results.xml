<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-06T08:19:28Z" name="Suite" finished-at="2024-01-06T08:19:41Z" duration-ms="13178">
    <groups>
      <group name="Purchase">
        <method signature="TC_01_VerifyUserAbleToOrderTheProduct.orderPlace(java.util.HashMap)[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" name="orderPlace" class="qa.tests.TC_01_VerifyUserAbleToOrderTheProduct"/>
      </group> <!-- Purchase -->
      <group name="errorHandle">
        <method signature="TC_02_VerifyErrorDisplayed.verifyLoginErrorMessage()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" name="verifyLoginErrorMessage" class="qa.tests.TC_02_VerifyErrorDisplayed"/>
      </group> <!-- errorHandle -->
    </groups>
    <test started-at="2024-01-06T08:19:28Z" name="ErrorHanding" finished-at="2024-01-06T08:19:33Z" duration-ms="5751">
      <class name="qa.tests.TC_02_VerifyErrorDisplayed">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:28Z" name="launchApplication" finished-at="2024-01-06T08:19:30Z" duration-ms="2642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyLoginErrorMessage()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:30Z" name="verifyLoginErrorMessage" finished-at="2024-01-06T08:19:31Z" duration-ms="519" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at qa.tests.TC_02_VerifyErrorDisplayed.verifyLoginErrorMessage(TC_02_VerifyErrorDisplayed.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginErrorMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:31Z" name="tearDown" finished-at="2024-01-06T08:19:31Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:31Z" name="launchApplication" finished-at="2024-01-06T08:19:33Z" duration-ms="1747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyLoginErrorMessage()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:33Z" name="verifyLoginErrorMessage" finished-at="2024-01-06T08:19:33Z" duration-ms="448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginErrorMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.tests.TC_02_VerifyErrorDisplayed@5974109]" started-at="2024-01-06T08:19:33Z" name="tearDown" finished-at="2024-01-06T08:19:33Z" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- qa.tests.TC_02_VerifyErrorDisplayed -->
    </test> <!-- ErrorHanding -->
    <test started-at="2024-01-06T08:19:28Z" name="PurchaseOrder" finished-at="2024-01-06T08:19:41Z" duration-ms="13178">
      <class name="qa.tests.TC_01_VerifyUserAbleToOrderTheProduct">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:28Z" name="launchApplication" finished-at="2024-01-06T08:19:30Z" duration-ms="2443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderPlace(java.util.HashMap)[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:30Z" name="orderPlace" data-provider="getData" finished-at="2024-01-06T08:19:33Z" duration-ms="3225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sk@123456789, email=sagar95kumbhar@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderPlace -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:33Z" name="tearDown" finished-at="2024-01-06T08:19:34Z" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:34Z" name="launchApplication" finished-at="2024-01-06T08:19:35Z" duration-ms="1644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderPlace(java.util.HashMap)[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:35Z" name="orderPlace" data-provider="getData" finished-at="2024-01-06T08:19:38Z" duration-ms="2873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sv@123456789, email=suraj0707@gmail.com, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderPlace -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:38Z" name="tearDown" finished-at="2024-01-06T08:19:38Z" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:38Z" name="launchApplication" finished-at="2024-01-06T08:19:40Z" duration-ms="1639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyOrderMenuList()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:40Z" name="verifyOrderMenuList" finished-at="2024-01-06T08:19:41Z" depends-on-methods="qa.tests.TC_01_VerifyUserAbleToOrderTheProduct.orderPlace" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderMenuList -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.tests.TC_01_VerifyUserAbleToOrderTheProduct@3b220bcb]" started-at="2024-01-06T08:19:41Z" name="tearDown" finished-at="2024-01-06T08:19:41Z" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- qa.tests.TC_01_VerifyUserAbleToOrderTheProduct -->
    </test> <!-- PurchaseOrder -->
  </suite> <!-- Suite -->
</testng-results>
